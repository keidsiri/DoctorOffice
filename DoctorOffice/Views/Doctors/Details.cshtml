@{
  Layout = "_Layout";
}

@model DoctorOffice.Models.Doctor;


<h2>Doctor Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>

@if(@Model.JoinEntities.Count == 0)
{
  <p>No patients belong to this doctor</p>
}
else
{
  <h4>Patients belonging to this doctor</h4>
  <ul>
  @foreach(var join in Model.JoinEntities)
  {
    <li>@join.Patient.Name</li>
    @using (Html.BeginForm("DeletePatient", "Doctors"))
    {
      @Html.Hidden("joinId", @join.DoctorPatientId)
      <input type="submit" value="Delete"/>
    }
  }
  </ul>
}

@if(@Model.JoinEntitiesSpecialty.Count == 0)
{
  <p>This doctor has no specialties</p>
}
else
{
  <h4>Specialties belonging to this doctor</h4>
  <ul>
  @foreach(var join in Model.JoinEntitiesSpecialty)
  {
    <li>@join.Specialty.Name</li>
    @using (Html.BeginForm("DeleteSpecialty", "Doctors"))
    {
      @Html.Hidden("joinId", @join.DoctorSpecialtyId)
      <input type="submit" value="Delete"/>
    }
  }
  </ul>
}

<p>@Html.ActionLink("Add a patient to this doctor", "AddPatient", new { id = Model.DoctorId })</p>
<p>@Html.ActionLink("Add a specialty to this doctor", "AddSpecialty", new { id = Model.DoctorId })</p>
<p>@Html.ActionLink("Back to list of doctors", "Index")</p>
<p>@Html.ActionLink("Edit this doctor", "Edit", new { id = Model.DoctorId })</p>
<p>@Html.ActionLink("Delete this doctor", "Delete", new { id = Model.DoctorId })</p>
<p>@Html.ActionLink("Home", "Index", "Home")</p>